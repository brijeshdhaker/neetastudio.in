<?php declare(strict_types=1);

use PHPUnit\Framework\TestCase;
use PHPUnit\Framework\Attributes\DataProvider;

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-03-13 at 07:11:04.
 */
final class PDOHelperTest extends TestCase {

    /**
     * @var PDOHelper
     */
    protected $pdoHelper;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    #[\Override]
    protected function setUp() : void {
        $this->pdoHelper = new PDOHelper;
    }


    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    #[\Override]
    protected function tearDown(): void {
        
    }
    
    /**
     * @covers PDOHelper::getConnection
     * @todo   Implement testGetConnection().
     */
    public function testGetConnection() : void  {
        //
        $connection = $this->pdoHelper->getConnection();
        //
        $this->assertNotNull($connection);
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');
    }

    public static function additionProvider(): array {
        return [
            [null, PDO::FETCH_BOTH, TRUE, null],
            ['', PDO::FETCH_BOTH, TRUE, null],
        ];
    }
    
    /**
     * @covers PDOHelper::execute
     * @todo   Implement testExecute().
     */
    #[DataProvider('additionProvider')]
    public function testExecute($sql, $fetchmode, $isAll, $expected): void {
        
        $this->assertSame($expected, $this->pdoHelper->execute($sql, $fetchmode, $isAll));
        
    }

    /**
     * @covers PDOHelper::execute
     * @todo   Implement testExecute().
     */
    public function testProcessQuery(): void {
        
        $reqObj = array(
            "firstName" => "Brijesh K.",
            "name" => "Brijesh Dhaker",
            "email" => "brijeshdhaker@gmail.com",
            "phone" => "+919820937445",
            "interest" => "maternity",
            "message" => "I am looking for maternity news letters",
            "rTyp" => "src",
            "uTyp" => "site",
        );
        
        $mapping = array(
            "ID" => "id",
            "NAME" => "name",
            "EMAIL" => "email",
            "PHONE" => "phone",
            "INTERSET_TYPE" => "interest",
            "MESSAGE" => "message",
            "ADD_TS" => "addTs"
        );
        
        $procedure = "call proc_add_customer_subscription('".$reqObj['name']."', '".$reqObj['email']."', '".$reqObj['phone']."', '".$reqObj['interest']."', '".$reqObj['message']. "', @code, @message);";
        
        $results = $this->pdoHelper->processQuery($procedure, $mapping);
        
        $this->assertNotNull($results['id']);
        $this->assertSame("Brijesh Dhaker", $results['name']);
        
        
    }
    
}

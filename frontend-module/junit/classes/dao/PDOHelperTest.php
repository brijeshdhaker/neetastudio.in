<?php

/**
 * Generated by PHPUnit_SkeletonGenerator on 2015-03-13 at 07:11:04.
 */
class PDOHelperTest extends PHPUnit_Framework_TestCase {

    /**
     * @var PDOHelper
     */
    protected $object;

    /**
     * Sets up the fixture, for example, opens a network connection.
     * This method is called before a test is executed.
     */
    protected function setUp() {
    
        // Create a mock for the PDOHelper class,
        // only mock the execute() method.
        $this->object = $this->getMockBuilder('PDOHelper')
                        ->disableOriginalConstructor()
                        ->setMethods(array('execute','processQuery','processResultSet','processMultiResults'))
                        ->getMock();
    }

    /**
     * Tears down the fixture, for example, closes a network connection.
     * This method is called after a test is executed.
     */
    protected function tearDown() {
        
    }

    /**
     * @covers PDOHelper::getConnection
     * @todo   Implement testGetConnection().
     */
    public function testGetConnection() {
        
        
    }

    /**
     * @covers PDOHelper::execute
     * @todo   Implement testExecute().
     */
    public function testExecute() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');
        
        // Create a map of arguments to return values.
        $map = array(
            array(null, PDO::FETCH_BOTH, TRUE, null),
            array('', PDO::FETCH_BOTH, TRUE, null),
        );
        
        // Configure the stub.
        $this->object->method('execute')
             ->will($this->returnValueMap($map));
        
        // $stub->doSomething() returns different values depending on
        // the provided arguments.
        $this->assertEquals(null, $this->object->execute(null, PDO::FETCH_BOTH, TRUE));
        $this->assertEquals(null, $this->object->execute('', PDO::FETCH_BOTH, TRUE));
        
        
    }

    /**
     * @covers PDOHelper::processQuery
     * @todo   Implement testProcessQuery().
     */
    public function testProcessQuery() {
        // Remove the following lines when you implement this test.
        $this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers PDOHelper::processResultSet
     * @todo   Implement testProcessResultSet().
     */
    public function testProcessResultSet() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');
    }

    /**
     * @covers PDOHelper::processMultiResults
     * @todo   Implement testProcessMultiResults().
     */
    public function testProcessMultiResults() {
        // Remove the following lines when you implement this test.
        //$this->markTestIncomplete('This test has not been implemented yet.');
    }

}
